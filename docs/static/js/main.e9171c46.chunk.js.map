{"version":3,"sources":["actions.ts","store.ts","reducer.ts","sideEffector.ts","util/useSideEffector.ts","Provider.tsx","Header.tsx","Form.tsx","Overview.tsx","InputFieled.tsx","DurationField.tsx","SubmitBtn.tsx","Result.tsx","Info.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","initialState","target","owner","name","since","until","sheetId","username","password","result","waiting","reducer","state","arguments","length","undefined","action","type","SET_URL","_split","payload","split","_split2","Object","slicedToArray","objectSpread","SET_TARGET","SET_RESULT","SET_DURATION","_action$payload","SET_WAITING","fetchCommitCount","_ref","_ref$since","_ref$until","axios","post","input","github","gsheet","auth","then","_ref2","data","output","values","getCommitCount","_ref3","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","sent","t0","console","log","finish","stop","this","_x","_x2","_x3","apply","sideEffector","GET_COMMIT_COUNT","dispatchSideEffector","dispatchSECaller","RootContext","createContext","Provider","children","_useSideEffector","dispatchSE","useCallback","useSideEffector","useReducer","_useSideEffector2","value","react_default","createElement","Header","className","Form","_useContext","useContext","onSubmit","e","preventDefault","Overview","InputFieldFactory","label","placeholder","prepend","_ref$id","id","_","uniqueId","onChange","handleChange","htmlFor","required","UrlInputField","TargetInputField","RangePicker","DatePicker","DurationField","dates","_dates","sinceM","untilM","startOf","toISOString","endOf","disabledDate","current","moment","defaultValue","subtract","defaultPickerValue","SubmitBtn","disabled","spin","spinning","Result","card","Info","Fragment","href","title","App","Provider_Provider","Header_Header","Overview_Overview","Form_Form","DurationField_DurationField","SubmitBtn_SubmitBtn","Result_Result","Info_Info","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9171c46.chunk.js","sourcesContent":["export enum ActionTypes {\n  SET_URL = \"SET_URL\",\n  SET_TARGET = \"SET_TARGET\",\n  SET_DURATION = \"SET_DURATION\",\n  GET_COMMIT_COUNT = \"GET_COMMIT_COUNT\",\n  SET_RESULT = \"SET_RESULT\",\n  SET_WAITING = \"SET_WAITING\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n\nexport interface SET_URL extends IAction {\n  type: ActionTypes.SET_URL;\n  payload: string;\n}\n\nexport interface SET_TARGET extends IAction {\n  type: ActionTypes.SET_TARGET;\n  payload: string;\n}\n\nexport interface SET_DURATION extends IAction {\n  type: ActionTypes.SET_DURATION;\n  payload: {\n    since: string;\n    until: string;\n  };\n}\nexport interface SET_WAITING extends IAction {\n  type: ActionTypes.SET_WAITING;\n  payload: boolean;\n}\nexport interface GET_COMMIT_COUNT extends IAction {\n  type: ActionTypes.GET_COMMIT_COUNT;\n}\n\nexport interface SET_RESULT extends IAction {\n  type: ActionTypes.SET_RESULT;\n  payload: string | number;\n}\n\nexport type Actions =\n  | SET_URL\n  | SET_TARGET\n  | SET_DURATION\n  | GET_COMMIT_COUNT\n  | SET_WAITING\n  | SET_RESULT;\n","export interface AppState {\n  target: string;\n  owner: string;\n  name: string;\n  since: string;\n  until: string;\n  sheetId: string;\n  username: string;\n  password: string;\n  result: number | string;\n  waiting: boolean;\n}\nexport const initialState: AppState = {\n  target: \"\",\n  owner: \"\",\n  name: \"\",\n  since: \"\",\n  until: \"\",\n  sheetId: \"1ywCxG8xTKOYK89AEZIqgpTvbvpbrb1s4H_bMVvKV59I\",\n  username: \"ec29e90c-188d-11e8-bb72-00163ec1cd01\",\n  password: \"0b82fe63b6bd450519ade02c3cb8f77ee581f25a810db28f3910e6cdd9d041bf\",\n  result: \"\",\n  waiting: false\n};\n","import { initialState } from \"./store\";\nimport { ActionTypes, Actions } from \"./actions\";\nexport const reducer = (state = initialState, action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const [owner, name] = (action.payload || \"\").split(\"/\");\n      if (owner && name) {\n        return { ...state, owner, name };\n      } else {\n        return state;\n      }\n    }\n    case ActionTypes.SET_TARGET: {\n      const target = action.payload;\n      return { ...state, target };\n    }\n    case ActionTypes.SET_RESULT: {\n      const result = action.payload;\n      return { ...state, result };\n    }\n    case ActionTypes.SET_DURATION: {\n      const { since, until } = action.payload;\n      return { ...state, since, until };\n    }\n    case ActionTypes.SET_WAITING: {\n      const waiting = action.payload;\n      return { ...state, waiting };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Actions, ActionTypes, GET_COMMIT_COUNT } from \"./actions\";\nimport { Dispatch } from \"react\";\nimport { AppState } from \"./store\";\nimport axios from \"axios\";\ninterface CommitCountResult {\n  output: {\n    github: {\n      output: {\n        values: [[string, string, string, string, string, number, string]];\n      };\n    };\n  };\n}\ninterface FetchCommitCountProps {\n  target: string;\n  owner: string;\n  name: string;\n  sheetId: string;\n  username: string;\n  password: string;\n  since?: string;\n  until?: string;\n}\nconst fetchCommitCount = ({\n  target,\n  owner,\n  name,\n  sheetId,\n  username,\n  password,\n  since = \"\",\n  until = \"\"\n}: FetchCommitCountProps) =>\n  axios\n    .post<CommitCountResult>(\n      \"https://protected-depths-49487.herokuapp.com/statemachine/commit_count_report.json?blocking=true \",\n      {\n        input: {\n          github: {\n            target,\n            owner,\n            name,\n            since,\n            until\n          },\n          gsheet: {\n            sheetId\n          }\n        }\n      },\n      {\n        auth: {\n          username,\n          password\n        }\n      }\n    )\n    .then(\n      ({\n        data: {\n          output: {\n            github: {\n              output: { values }\n            }\n          }\n        }\n      }) => values[0][5]\n    );\n\nconst getCommitCount = async (\n  action: GET_COMMIT_COUNT,\n  dispatch: Dispatch<Actions>,\n  state: AppState\n) => {\n  const {\n    target,\n    owner,\n    name,\n    since,\n    until,\n    username,\n    password,\n    sheetId\n  } = state;\n  dispatch({ type: ActionTypes.SET_WAITING, payload: true });\n  try {\n    const result = await fetchCommitCount({\n      target,\n      owner,\n      name,\n      since,\n      until,\n      username,\n      password,\n      sheetId\n    });\n    dispatch({ type: ActionTypes.SET_RESULT, payload: result });\n  } catch (e) {\n    console.log(e);\n  } finally {\n    dispatch({ type: ActionTypes.SET_WAITING, payload: false });\n  }\n};\nexport const sideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: AppState\n) => {\n  switch (action.type) {\n    case ActionTypes.GET_COMMIT_COUNT: {\n      getCommitCount(action, dispatch, state);\n      return;\n    }\n  }\n};\n","import { Dispatch, useCallback } from \"react\";\ntype SideEffector<S, A> = (action: A, dispatch: Dispatch<A>, state: S) => void;\nexport const useSideEffector = <S, A>(\n  [state, dispatch]: [S, Dispatch<A>],\n  sideEffector: SideEffector<S, A>\n): [S, Dispatch<A>] => {\n  const dispatchSECaller = (action: A) => {\n    dispatchSE(action);\n  };\n  const dispatchSE = useCallback(\n    dispatchSideEffector(state, dispatch, sideEffector, dispatchSECaller),\n    [state, dispatch]\n  );\n  return [state, dispatchSE];\n};\nconst dispatchSideEffector = <S, A>(\n  state: S,\n  dispatch: Dispatch<A>,\n  sideEffector: SideEffector<S, A>,\n  dispatchSECaller: Dispatch<A>\n) => (action: A) => {\n  dispatch(action);\n  sideEffector(action, dispatchSECaller, state);\n};\n","import React, { createContext, useReducer } from \"react\";\nimport _ from \"lodash\";\nimport { Actions } from \"./actions\";\nimport { reducer } from \"./reducer\";\nimport { initialState } from \"./store\";\nimport { sideEffector } from \"./sideEffector\";\nimport { useSideEffector } from \"./util/useSideEffector\";\nexport const RootContext = createContext({\n  state: initialState,\n  dispatch: (action: Actions) => {}\n});\n\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useSideEffector(\n    useReducer(reducer, initialState),\n    sideEffector\n  );\n  const value = {\n    state,\n    dispatch\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React from 'react';\nexport const Header = () => (\n  <nav className=\"navbar navbar-dark bg-dark\">\n    <span className=\"navbar-brand mb-0 h1\">Commit Count Report</span>\n  </nav>\n);\n","import React, { useCallback, useContext } from \"react\";\nimport { RootContext } from \"./Provider\";\nimport { ActionTypes } from \"./actions\";\nexport const Form = ({ children }: { children: React.ReactNode }) => {\n  const {\n    dispatch,\n    state: { waiting }\n  } = useContext(RootContext);\n  const onSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (!waiting) {\n        dispatch({ type: ActionTypes.GET_COMMIT_COUNT });\n      }\n      e.preventDefault();\n    },\n    [dispatch, waiting]\n  );\n  return <form onSubmit={onSubmit}>{children}</form>;\n};\n","import React from 'react';\nexport const Overview = () => (\n  <p className=\"lead pt-1\">FaaS Shell sample Commit Count Report Web GUI.</p>\n);\n","import React, { useContext, useCallback, Dispatch } from \"react\";\nimport { ActionTypes, Actions } from \"./actions\";\nimport _ from \"lodash\";\nimport { RootContext } from \"./Provider\";\ninterface InputFieldFactoryProps {\n  id?: string;\n  label: string;\n  prepend?: string;\n  placeholder: string;\n  onChange: (value: string, dispatch: Dispatch<Actions>) => void;\n}\nconst InputFieldFactory = ({\n  label,\n  placeholder,\n  prepend,\n  id = _.uniqueId(\"input\"),\n  onChange\n}: InputFieldFactoryProps) => () => {\n  const { dispatch } = useContext(RootContext);\n\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChange(e.target.value, dispatch);\n    },\n    [onChange, dispatch]\n  );\n\n  return (\n    <div className=\"form-group row\">\n      <label htmlFor={id} className=\"col-sm-3 col-form-label\">\n        {label}\n      </label>\n      <div className=\"input-group col-sm-9\">\n        {prepend && (\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n        <input\n          onChange={handleChange}\n          required\n          className=\"form-control\"\n          id={id}\n          placeholder={placeholder}\n        />\n      </div>\n    </div>\n  );\n};\nexport const UrlInputField = InputFieldFactory({\n  label: \"GitHub Repository URL:\",\n  placeholder: \"naohirotamura/faasshell\",\n  prepend: \"https://github.com/\",\n  onChange: (value, dispatch) => {\n    dispatch({ type: ActionTypes.SET_URL, payload: value });\n  }\n});\n\nexport const TargetInputField = InputFieldFactory({\n  label: \"Commiter's search string:\",\n  placeholder: \"fujitsu.com\",\n  onChange: (value, dispatch) => {\n    dispatch({ type: ActionTypes.SET_TARGET, payload: value });\n  }\n});\n","import React, { useContext, useCallback } from \"react\";\nimport { DatePicker } from \"antd\";\nimport { RootContext } from \"./Provider\";\nimport { RangePickerValue } from \"antd/lib/date-picker/interface\";\nimport { ActionTypes } from \"./actions\";\nimport moment, { Moment } from \"moment\";\nconst { RangePicker } = DatePicker;\nexport const DurationField = () => {\n  const { dispatch } = useContext(RootContext);\n  const onChange = useCallback(\n    (dates: RangePickerValue) => {\n      const [sinceM, untilM] = dates;\n      if (sinceM && untilM) {\n        const since = sinceM.startOf(\"day\").toISOString();\n        const until = untilM.endOf(\"day\").toISOString();\n        dispatch({ type: ActionTypes.SET_DURATION, payload: { since, until } });\n      }\n    },\n    [dispatch]\n  );\n  const disabledDate = useCallback((current: Moment | undefined) => {\n    return !!(current && current >= moment().endOf(\"day\"));\n  }, []);\n  const defaultValue: [Moment, Moment] = [\n    moment().subtract(1, \"year\"),\n    moment()\n  ];\n  return (\n    <div className=\"form-group row\">\n      <label className=\"col-sm-3 col-form-label\">\n        Search Duration (Option):\n      </label>\n      <div className=\"col-sm-9\">\n        <RangePicker\n          onChange={onChange}\n          disabledDate={disabledDate}\n          defaultPickerValue={defaultValue}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { RootContext } from \"./Provider\";\nimport { Spin } from \"antd\";\nexport const SubmitBtn = () => {\n  const {\n    state: { waiting }\n  } = useContext(RootContext);\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-sm-9 offset-sm-3\">\n        <button disabled={waiting} className=\"btn-info btn\">\n          Get Commit Count\n        </button>\n        <Spin className=\"ml-2\" spinning={waiting} />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { RootContext } from \"./Provider\";\nimport { Card } from \"antd\";\nexport const Result = () => {\n  const {\n    state: { result }\n  } = useContext(RootContext);\n  return (\n    <div className=\"form-group row\">\n      <label className=\"col-sm-3 col-form-label\">Result:</label>\n      <div className=\"input-group col-sm-9\">\n        <Card>{result}</Card>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nexport const Info = () => (\n  <>\n    <p>\n      All results are logged into{\" \"}\n      <a\n        href=\"https://docs.google.com/spreadsheets/d/1ywCxG8xTKOYK89AEZIqgpTvbvpbrb1s4H_bMVvKV59I/edit#gid=0\"\n        title=\"Google Sheets\"\n        target=\"_blank\"\n      >\n        Google Sheets\n      </a>\n      .\n    </p>\n    <small className=\"from-text text-muted\">\n      Get Commit Count button privdes the same effect as the following git\n      command:\n    </small>\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <pre>\n          <small>\n            <code>\n              $ git clone https://github.com/NaohiroTamura/faasshell\n              <br />\n              $ cd faasshell\n              <br />$ git log --since=2018-06-21T00:00:00+00:00\n              --until=2018-07-20T00:00:00+00:00 --no-merges --format=%ae | grep\n              fujitsu.com | wc -l\n            </code>\n          </small>\n        </pre>\n      </div>\n    </div>\n  </>\n);\n","import React, { useCallback, useContext } from \"react\";\nimport \"./App.css\";\nimport { Card } from \"antd\";\nimport { Provider } from \"./Provider\";\nimport { Header } from \"./Header\";\nimport { Form } from \"./Form\";\nimport { Overview } from \"./Overview\";\nimport { UrlInputField, TargetInputField } from \"./InputFieled\";\nimport { DurationField } from \"./DurationField\";\nimport { SubmitBtn } from \"./SubmitBtn\";\nimport { Result } from \"./Result\";\nimport { Info } from \"./Info\";\n\nconst App = () => {\n  return (\n    <Provider>\n      <Header />\n      <div className=\"container\">\n        <Overview />\n        <Card>\n          <Form>\n            <UrlInputField />\n            <TargetInputField />\n            <DurationField />\n            <SubmitBtn />\n            <Result />\n            <Info />\n          </Form>\n        </Card>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}