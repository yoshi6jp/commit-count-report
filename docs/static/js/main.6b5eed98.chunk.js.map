{"version":3,"sources":["actions.ts","store.ts","reducer.ts","Provider.tsx","Header.tsx","Form.tsx","Overview.tsx","InputFieled.tsx","DurationField.tsx","SubmitBtn.tsx","Result.tsx","Info.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionTypes","initialState","target","owner","name","since","until","sheetId","username","password","result","reducer","state","arguments","length","undefined","action","type","SET_URL","_split","payload","split","_split2","Object","slicedToArray","objectSpread","SET_TARGET","SET_RESULT","SET_DURATION","_action$payload","RootContext","createContext","setUrl","url","setTarget","setDuration","_ref","getCommitCount","fetchCommitCount","_ref2","_ref2$since","_ref2$until","axios","post","input","github","gsheet","auth","then","_ref3","data","output","values","Provider","_ref4","children","_useReducer","useReducer","_useReducer2","dispatch","_useWait","useWait","startWaiting","endWaiting","value","useCallback","_ref5","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","sent","t0","console","log","finish","stop","this","react_default","createElement","Header","className","Form","useContext","isWaiting","onSubmit","e","preventDefault","Overview","InputFieldFactory","label","placeholder","prepend","setter","_ref$id","id","_","uniqueId","setValue","onChange","htmlFor","required","UrlInputField","TargetInputField","RangePicker","DatePicker","DurationField","dates","_dates","sinceM","untilM","startOf","toISOString","endOf","SubmitBtn","loading","disabled","spin","spinning","Result","card","Info","Fragment","App","lib","Waiter","Provider_Provider","Header_Header","Overview_Overview","Form_Form","DurationField_DurationField","SubmitBtn_SubmitBtn","Result_Result","Info_Info","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uLAAYA,8QCaCC,EAAyB,CACpCC,OAAQ,GACRC,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAS,+CACTC,SAAU,uCACVC,SAAU,mEACVC,OAAQ,ICpBGC,EAAU,WAA2C,IAA1CC,EAA0CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlCZ,EAAce,EAAoBH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQC,EAAOC,MACb,KAAKjB,EAAYkB,QAAS,IAAAC,GACDH,EAAOI,SAAW,IAAIC,MAAM,KAD3BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACjBhB,EADiBmB,EAAA,GACVlB,EADUkB,EAAA,GAExB,OAAInB,GAASC,EACJmB,OAAAE,EAAA,EAAAF,CAAA,GAAKX,EAAZ,CAAmBT,QAAOC,SAEnBQ,EAGX,KAAKZ,EAAY0B,WACf,IAAMxB,EAASc,EAAOI,QACtB,OAAOG,OAAAE,EAAA,EAAAF,CAAA,GAAKX,EAAZ,CAAmBV,WAErB,KAAKF,EAAY2B,WACf,IAAMjB,EAASM,EAAOI,QACtB,OAAOG,OAAAE,EAAA,EAAAF,CAAA,GAAKX,EAAZ,CAAmBF,WAErB,KAAKV,EAAY4B,aAAc,IAAAC,EACJb,EAAOI,QAAxBf,EADqBwB,EACrBxB,MAAOC,EADcuB,EACdvB,MACf,OAAOiB,OAAAE,EAAA,EAAAF,CAAA,GAAKX,EAAZ,CAAmBP,QAAOC,UAE5B,QACE,OAAOM,8BChBAkB,EAAcC,wBAAc,CACvCnB,MAAOX,EACP+B,OAAQ,SAACC,KACTC,UAAW,SAAChC,KACZiC,YAAa,SAAAC,GAAwDA,EAArD/B,MAAqD+B,EAA9C9B,OACvB+B,eAAgB,eAqBZC,EAAmB,SAAAC,GAAA,IACvBrC,EADuBqC,EACvBrC,OACAC,EAFuBoC,EAEvBpC,MACAC,EAHuBmC,EAGvBnC,KACAG,EAJuBgC,EAIvBhC,QACAC,EALuB+B,EAKvB/B,SACAC,EANuB8B,EAMvB9B,SANuB+B,EAAAD,EAOvBlC,aAPuB,IAAAmC,EAOf,GAPeA,EAAAC,EAAAF,EAQvBjC,aARuB,IAAAmC,EAQf,GAReA,EAAA,OAUvBC,IACGC,KACC,oGACA,CACEC,MAAO,CACLC,OAAQ,CACN3C,SACAC,QACAC,OACAC,QACAC,SAEFwC,OAAQ,CACNvC,aAIN,CACEwC,KAAM,CACJvC,WACAC,cAILuC,KACC,SAAAC,GAAA,OAAAA,EACEC,KACEC,OACEN,OACEM,OAAUC,OAIL,GAAG,MAETC,EAAW,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,SAA8CC,EAC7CC,qBAAW9C,EAASV,GADyByD,EAAAnC,OAAAC,EAAA,EAAAD,CAAAiC,EAAA,GAChE5C,EADgE8C,EAAA,GACzDC,EADyDD,EAAA,GAAAE,EAElCC,oBAA7BC,EAF+DF,EAE/DE,aAAcC,EAFiDH,EAEjDG,WAEpB7D,EAQEU,EARFV,OACAC,EAOES,EAPFT,MACAC,EAMEQ,EANFR,KACAC,EAKEO,EALFP,MACAC,EAIEM,EAJFN,MACAE,EAGEI,EAHFJ,SACAC,EAEEG,EAFFH,SACAF,EACEK,EADFL,QAEIyD,EAAQ,CACZpD,QACAoB,OAAQiC,sBACN,SAAChC,GACC0B,EAAS,CAAE1C,KAAMjB,EAAYkB,QAASE,QAASa,KAEjD,CAAC0B,IAEHzB,UAAW+B,sBACT,SAAC/D,GACCyD,EAAS,CAAE1C,KAAMjB,EAAY0B,WAAYN,QAASlB,KAEpD,CAACyD,IAEHxB,YAAa8B,sBACX,SAAAC,GAAwD,IAArD7D,EAAqD6D,EAArD7D,MAAOC,EAA8C4D,EAA9C5D,MACRqD,EAAS,CAAE1C,KAAMjB,EAAY4B,aAAcR,QAAS,CAAEf,QAAOC,YAE/D,CAACqD,IAEHtB,eAAgB4B,sBAAY,WACtB/D,GAAUC,GAASC,GACrBmB,OAAA4C,EAAA,EAAA5C,CAAA6C,EAAAC,EAAAC,KAAC,SAAAC,IAAA,IAAA7D,EAAA,OAAA0D,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACCb,EAAa,SADdW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBrC,EAAiB,CACpCpC,SACAC,QACAC,OACAC,QACAC,QACAE,WACAC,WACAF,YAXL,OAGSG,EAHT+D,EAAAG,KAaGjB,EAAS,CAAE1C,KAAMjB,EAAY2B,WAAYP,QAASV,IAbrD+D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAeGK,QAAQC,IAARN,EAAAI,IAfH,eAAAJ,EAAAC,KAAA,GAiBGX,EAAW,SAjBdU,EAAAO,OAAA,6BAAAP,EAAAQ,SAAAV,EAAAW,KAAA,iBAAD3D,IAqBD,CACDoC,EACAzD,EACAC,EACAC,EACAC,EACAC,EACAE,EACAC,EACAF,EACAuD,EACAC,KAGJ,OAAOoB,EAAAd,EAAAe,cAACtD,EAAYuB,SAAb,CAAsBW,MAAOA,GAAQT,ICrJjC8B,EAAS,kBACpBF,EAAAd,EAAAe,cAAA,OAAKE,UAAU,8BACbH,EAAAd,EAAAe,cAAA,QAAME,UAAU,wBAAhB,yBCASC,EAAO,SAAAnD,GAAiD,IAA9CmB,EAA8CnB,EAA9CmB,SACblB,EAAmBmD,qBAAW1D,GAA9BO,eACAoD,EAAc5B,oBAAd4B,UACFC,EAAWzB,sBACf,SAAC0B,GACMF,EAAU,UACbpD,IAEFsD,EAAEC,kBAEJ,CAACvD,EAAgBoD,IAEnB,OAAON,EAAAd,EAAAe,cAAA,QAAMM,SAAUA,GAAWnC,ICdvBsC,EAAW,kBACtBV,EAAAd,EAAAe,cAAA,KAAGE,UAAU,aAAb,qECQIQ,EAAoB,SAAA1D,GAAA,IACxB2D,EADwB3D,EACxB2D,MACAC,EAFwB5D,EAExB4D,YACAC,EAHwB7D,EAGxB6D,QACAC,EAJwB9D,EAIxB8D,OAJwBC,EAAA/D,EAKxBgE,UALwB,IAAAD,EAKnBE,IAAEC,SAAS,SALQH,EAAA,OAMI,WAAM,IAChBI,EAAaf,qBAAW1D,GAAjCoE,GACHM,EAAWvC,sBACf,SAAC0B,GACCY,EAASZ,EAAEzF,OAAO8D,QAEpB,CAACuC,IAEH,OACEpB,EAAAd,EAAAe,cAAA,OAAKE,UAAU,kBACbH,EAAAd,EAAAe,cAAA,SAAOqB,QAASL,EAAId,UAAU,2BAC3BS,GAEHZ,EAAAd,EAAAe,cAAA,OAAKE,UAAU,wBACZW,GACCd,EAAAd,EAAAe,cAAA,OAAKE,UAAU,uBACbH,EAAAd,EAAAe,cAAA,QAAME,UAAU,oBAAoBW,IAGxCd,EAAAd,EAAAe,cAAA,SACEoB,SAAUA,EACVE,UAAQ,EACRpB,UAAU,eACVc,GAAIA,EACJJ,YAAaA,QAMVW,EAAgBb,EAAkB,CAC7CC,MAAO,yBACPC,YAAa,0BACbC,QAAS,qBACTC,OAAQ,WAGGU,EAAmBd,EAAkB,CAChDC,MAAO,4BACPC,YAAa,cACbE,OAAQ,cCpDFW,SAAgBC,EAAhBD,YACKE,EAAgB,WAAM,IACzB5E,EAAgBqD,qBAAW1D,GAA3BK,YACFqE,EAAWvC,sBACf,SAAC+C,GAA4B,IAAAC,EAAA1F,OAAAC,EAAA,EAAAD,CACFyF,EADE,GACpBE,EADoBD,EAAA,GACZE,EADYF,EAAA,GAE3B,GAAIC,GAAUC,EAAQ,CACpB,IAAM9G,EAAQ6G,EAAOE,QAAQ,OAAOC,cAC9B/G,EAAQ6G,EAAOG,MAAM,OAAOD,cAClClF,EAAY,CAAE9B,QAAOC,YAGzB,CAAC6B,IAEH,OACEgD,EAAAd,EAAAe,cAAA,OAAKE,UAAU,kBACbH,EAAAd,EAAAe,cAAA,SAAOE,UAAU,2BAAjB,4BAGAH,EAAAd,EAAAe,cAAA,OAAKE,UAAU,YACbH,EAAAd,EAAAe,cAACyB,EAAD,CAAaL,SAAUA,gBCrBlBe,EAAY,WAAM,IAEvBC,GAAU/B,EADM5B,oBAAd4B,WACkB,SAE1B,OACEN,EAAAd,EAAAe,cAAA,OAAKE,UAAU,kBACbH,EAAAd,EAAAe,cAAA,OAAKE,UAAU,wBACbH,EAAAd,EAAAe,cAAA,UAAQqC,SAAUD,EAASlC,UAAU,gBAArC,oBAGAH,EAAAd,EAAAe,cAACsC,EAAA,EAAD,CAAMpC,UAAU,OAAOqC,SAAUH,OCV5BI,EAAS,WAAM,IAEflH,EACP8E,qBAAW1D,GADblB,MAASF,OAEX,OACEyE,EAAAd,EAAAe,cAAA,OAAKE,UAAU,kBACbH,EAAAd,EAAAe,cAAA,SAAOE,UAAU,2BAAjB,UACAH,EAAAd,EAAAe,cAAA,OAAKE,UAAU,wBACbH,EAAAd,EAAAe,cAACyC,EAAA,EAAD,KAAOnH,MCVFoH,EAAO,kBAClB3C,EAAAd,EAAAe,cAAAD,EAAAd,EAAA0D,SAAA,KACE5C,EAAAd,EAAAe,cAAA,SAAOE,UAAU,wBAAjB,iFAIAH,EAAAd,EAAAe,cAAA,OAAKE,UAAU,QACbH,EAAAd,EAAAe,cAAA,OAAKE,UAAU,aACbH,EAAAd,EAAAe,cAAA,WACED,EAAAd,EAAAe,cAAA,aACED,EAAAd,EAAAe,cAAA,qEAEED,EAAAd,EAAAe,cAAA,WAFF,iBAIED,EAAAd,EAAAe,cAAA,WAJF,2IC0BG4C,EAvBH,WACV,OACE7C,EAAAd,EAAAe,cAAC6C,EAAA,QAAQC,OAAT,KACE/C,EAAAd,EAAAe,cAAC+C,EAAD,KACEhD,EAAAd,EAAAe,cAACgD,EAAD,MACAjD,EAAAd,EAAAe,cAAA,OAAKE,UAAU,aACbH,EAAAd,EAAAe,cAACiD,EAAD,MACAlD,EAAAd,EAAAe,cAACyC,EAAA,EAAD,KACE1C,EAAAd,EAAAe,cAACkD,EAAD,KACEnD,EAAAd,EAAAe,cAACuB,EAAD,MACAxB,EAAAd,EAAAe,cAACwB,EAAD,MACAzB,EAAAd,EAAAe,cAACmD,EAAD,MACApD,EAAAd,EAAAe,cAACoD,EAAD,MACArD,EAAAd,EAAAe,cAACqD,EAAD,MACAtD,EAAAd,EAAAe,cAACsD,EAAD,YChBMC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9D,EAAAd,EAAAe,cAAC8D,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvG,KAAK,SAAAwG,GACjCA,EAAaC","file":"static/js/main.6b5eed98.chunk.js","sourcesContent":["export enum ActionTypes {\n  SET_URL = 'SET_URL',\n  SET_TARGET = 'SET_TARGET',\n  SET_DURATION = 'SET_DURATION',\n  GET_COMMIT_COUNT = 'GET_COMMIT_COUNT',\n  SET_RESULT = 'SET_RESULT'\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n","import { Dispatch } from 'react';\nimport { IAction } from './actions';\nexport interface AppState {\n  target: string;\n  owner: string;\n  name: string;\n  since: string;\n  until: string;\n  sheetId: string;\n  username: string;\n  password: string;\n  result: number | string;\n}\nexport const initialState: AppState = {\n  target: '',\n  owner: '',\n  name: '',\n  since: '',\n  until: '',\n  sheetId: '1ywCxG8xTKOYK89AEZIqgpTvbvpbrb1s4H_bMVvKV59I',\n  username: 'ec29e90c-188d-11e8-bb72-00163ec1cd01',\n  password: '0b82fe63b6bd450519ade02c3cb8f77ee581f25a810db28f3910e6cdd9d041bf',\n  result: ''\n};\n","import { AppState, initialState } from './store';\nimport { ActionTypes, IAction } from './actions';\nexport const reducer = (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const [owner, name] = (action.payload || '').split('/');\n      if (owner && name) {\n        return { ...state, owner, name };\n      } else {\n        return state;\n      }\n    }\n    case ActionTypes.SET_TARGET: {\n      const target = action.payload;\n      return { ...state, target };\n    }\n    case ActionTypes.SET_RESULT: {\n      const result = action.payload;\n      return { ...state, result };\n    }\n    case ActionTypes.SET_DURATION: {\n      const { since, until } = action.payload;\n      return { ...state, since, until };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import React, { useCallback, createContext, useReducer, Dispatch } from 'react';\nimport _ from 'lodash';\nimport { ActionTypes } from './actions';\nimport { reducer } from './reducer';\nimport { initialState } from './store';\nimport axios from 'axios';\nimport { useWait } from 'react-use';\nimport { start } from 'repl';\nimport { string } from 'prop-types';\nexport const RootContext = createContext({\n  state: initialState,\n  setUrl: (url: string) => {},\n  setTarget: (target: string) => {},\n  setDuration: ({ since, until }: { since: string; until: string }) => {},\n  getCommitCount: () => {}\n});\ninterface CommitCountResult {\n  output: {\n    github: {\n      output: {\n        values: [[string, string, string, string, string, number, string]];\n      };\n    };\n  };\n}\ninterface FetchCommitCountProps {\n  target: string;\n  owner: string;\n  name: string;\n  sheetId: string;\n  username: string;\n  password: string;\n  since?: string;\n  until?: string;\n}\nconst fetchCommitCount = ({\n  target,\n  owner,\n  name,\n  sheetId,\n  username,\n  password,\n  since = '',\n  until = ''\n}: FetchCommitCountProps) =>\n  axios\n    .post<CommitCountResult>(\n      'https://protected-depths-49487.herokuapp.com/statemachine/commit_count_report.json?blocking=true ',\n      {\n        input: {\n          github: {\n            target,\n            owner,\n            name,\n            since,\n            until\n          },\n          gsheet: {\n            sheetId\n          }\n        }\n      },\n      {\n        auth: {\n          username,\n          password\n        }\n      }\n    )\n    .then(\n      ({\n        data: {\n          output: {\n            github: {\n              output: { values }\n            }\n          }\n        }\n      }) => values[0][5]\n    );\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { startWaiting, endWaiting } = useWait();\n  const {\n    target,\n    owner,\n    name,\n    since,\n    until,\n    username,\n    password,\n    sheetId\n  } = state;\n  const value = {\n    state,\n    setUrl: useCallback(\n      (url: string) => {\n        dispatch({ type: ActionTypes.SET_URL, payload: url });\n      },\n      [dispatch]\n    ),\n    setTarget: useCallback(\n      (target: string) => {\n        dispatch({ type: ActionTypes.SET_TARGET, payload: target });\n      },\n      [dispatch]\n    ),\n    setDuration: useCallback(\n      ({ since, until }: { since: string; until: string }) => {\n        dispatch({ type: ActionTypes.SET_DURATION, payload: { since, until } });\n      },\n      [dispatch]\n    ),\n    getCommitCount: useCallback(() => {\n      if (target && owner && name) {\n        (async () => {\n          startWaiting('fetch');\n          try {\n            const result = await fetchCommitCount({\n              target,\n              owner,\n              name,\n              since,\n              until,\n              username,\n              password,\n              sheetId\n            });\n            dispatch({ type: ActionTypes.SET_RESULT, payload: result });\n          } catch (e) {\n            console.log(e);\n          } finally {\n            endWaiting('fetch');\n          }\n        })();\n      }\n    }, [\n      dispatch,\n      target,\n      owner,\n      name,\n      since,\n      until,\n      username,\n      password,\n      sheetId,\n      startWaiting,\n      endWaiting\n    ])\n  };\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React from 'react';\nexport const Header = () => (\n  <nav className=\"navbar navbar-dark bg-dark\">\n    <span className=\"navbar-brand mb-0 h1\">Commit Count Report</span>\n  </nav>\n);\n","import React, { useCallback, useContext } from 'react';\nimport { RootContext } from './Provider';\nimport { useWait } from 'react-use';\nexport const Form = ({ children }: { children: React.ReactNode }) => {\n  const { getCommitCount } = useContext(RootContext);\n  const { isWaiting } = useWait();\n  const onSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (!isWaiting('fetch')) {\n        getCommitCount();\n      }\n      e.preventDefault();\n    },\n    [getCommitCount, isWaiting]\n  );\n  return <form onSubmit={onSubmit}>{children}</form>;\n};\n","import React from 'react';\nexport const Overview = () => (\n  <p className=\"lead pt-1\">FaaS Shell sample Commit Count Report Web GUI.</p>\n);\n","import React, { useContext, useCallback } from 'react';\nimport _ from 'lodash';\nimport { RootContext } from './Provider';\ninterface InputFieldFactoryProps {\n  id?: string;\n  label: string;\n  prepend?: string;\n  setter: 'setUrl' | 'setTarget';\n  placeholder: string;\n}\nconst InputFieldFactory = ({\n  label,\n  placeholder,\n  prepend,\n  setter,\n  id = _.uniqueId('input')\n}: InputFieldFactoryProps) => () => {\n  const { [setter]: setValue } = useContext(RootContext);\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(e.target.value);\n    },\n    [setValue]\n  );\n  return (\n    <div className=\"form-group row\">\n      <label htmlFor={id} className=\"col-sm-3 col-form-label\">\n        {label}\n      </label>\n      <div className=\"input-group col-sm-9\">\n        {prepend && (\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\">{prepend}</span>\n          </div>\n        )}\n        <input\n          onChange={onChange}\n          required\n          className=\"form-control\"\n          id={id}\n          placeholder={placeholder}\n        />\n      </div>\n    </div>\n  );\n};\nexport const UrlInputField = InputFieldFactory({\n  label: 'GitHub Repository URL:',\n  placeholder: 'naohirotamura/faasshell',\n  prepend: 'https://github.com',\n  setter: 'setUrl'\n});\n\nexport const TargetInputField = InputFieldFactory({\n  label: \"Commiter's search string:\",\n  placeholder: 'fujitsu.com',\n  setter: 'setTarget'\n});\n","import React, { useContext, useCallback } from 'react';\nimport { DatePicker } from 'antd';\nimport { RootContext } from './Provider';\nimport { RangePickerValue } from 'antd/lib/date-picker/interface';\nconst { RangePicker } = DatePicker;\nexport const DurationField = () => {\n  const { setDuration } = useContext(RootContext);\n  const onChange = useCallback(\n    (dates: RangePickerValue) => {\n      const [sinceM, untilM] = dates;\n      if (sinceM && untilM) {\n        const since = sinceM.startOf('day').toISOString();\n        const until = untilM.endOf('day').toISOString();\n        setDuration({ since, until });\n      }\n    },\n    [setDuration]\n  );\n  return (\n    <div className=\"form-group row\">\n      <label className=\"col-sm-3 col-form-label\">\n        Search Duration (Option)\n      </label>\n      <div className=\"col-sm-9\">\n        <RangePicker onChange={onChange} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useWait } from 'react-use';\nimport { Spin } from 'antd';\nexport const SubmitBtn = () => {\n  const { isWaiting } = useWait();\n  const loading = isWaiting('fetch');\n\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-sm-9 offset-sm-3\">\n        <button disabled={loading} className=\"btn-info btn\">\n          Get Commit Count\n        </button>\n        <Spin className=\"ml-2\" spinning={loading} />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from 'react';\nimport { RootContext } from './Provider';\nimport { Card } from 'antd';\nexport const Result = () => {\n  const {\n    state: { result }\n  } = useContext(RootContext);\n  return (\n    <div className=\"form-group row\">\n      <label className=\"col-sm-3 col-form-label\">Result</label>\n      <div className=\"input-group col-sm-9\">\n        <Card>{result}</Card>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nexport const Info = () => (\n  <>\n    <small className=\"from-text text-muted\">\n      Get Commit Count button privdes the same effect as the following git\n      command:\n    </small>\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <pre>\n          <small>\n            <code>\n              $ git clone https://github.com/NaohiroTamura/faasshell\n              <br />\n              $ cd faasshell\n              <br />$ git log --since=2018-06-21T00:00:00+00:00\n              --until=2018-07-20T00:00:00+00:00 --no-merges --format=%ae | grep\n              fujitsu.com | wc -l\n            </code>\n          </small>\n        </pre>\n      </div>\n    </div>\n  </>\n);\n","import React, { useCallback, useContext } from 'react';\nimport './App.css';\nimport { Card } from 'antd';\nimport { Provider } from './Provider';\nimport { Header } from './Header';\nimport { Form } from './Form';\nimport { Overview } from './Overview';\nimport { UrlInputField, TargetInputField } from './InputFieled';\nimport { DurationField } from './DurationField';\nimport { SubmitBtn } from './SubmitBtn';\nimport { Result } from './Result';\nimport { Info } from './Info';\nimport { useWait } from 'react-use';\n\nconst App = () => {\n  return (\n    <useWait.Waiter>\n      <Provider>\n        <Header />\n        <div className=\"container\">\n          <Overview />\n          <Card>\n            <Form>\n              <UrlInputField />\n              <TargetInputField />\n              <DurationField />\n              <SubmitBtn />\n              <Result />\n              <Info />\n            </Form>\n          </Card>\n        </div>\n      </Provider>\n    </useWait.Waiter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}